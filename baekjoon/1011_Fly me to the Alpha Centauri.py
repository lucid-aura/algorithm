T = int(input())
for i in range(T):
    x, y = input().split()
    dist = int(y) - int(x)
    answer = 0
    warp = 1
    if dist < 4:
        print(dist)
    else:
        while dist > 2*warp:
            answer += 2
            dist -= 2*warp
            warp += 1
        dist -= warp
        answer += 1
        if dist > 0:
            answer += 1
        print(answer)

########################################################################
# 단계별로 풀어보기 기본 수학1 마지막 문제
# 처음과 끝은 항상 1의 거리로 워프해야 한다.
# 거리가 1이 늘어날수록 거리 1부터 차례대로 값이 1씩 커진다
# 하위 거리는 최대 3까지 사용할 수 있으며 값을 넘으면 올림이 된다.
# a: b-c (a: 해당 거리, b: 쓰인 숫자, c: 쓰인 개수)
# 1: 1-1 / 2: 1-2 / 3: 1-3 / 4: 1-2, 2-1 / 5: 1-3, 2-1 /
# 6: 1-2, 2-2 / 7: 1-3, 2-2 / 8: 1-2, 2-3 / 9: 1-2, 2-2, 3-1
# 최소의 숫자부터 차례대로 최소 2개의 숫자를 가지게 되는 규칙이 있다.
# 따라서 거리를 1씩 올리며 거리*2 씩 워프시킨다. (단 거리 1 예외)
# 거리*2가 범위를 넘어갈 시 워프 거리 하나만 더 감소시킨다.
# 남은 거리가 남았다면 최종 워프 거리보다 낮은 하나가 3개가 쓰였다는 것이다.
# 따라서 워프 횟수 1을 더 증가 시켜 출력한다.
########################################################################